import sqlite3 
import xml.etree.ElementTree as ET

conn = sqlite3.connect('mus.sqlite')
cur = conn.cursor()

cur.executescript('''
    
    DROP TABLE IF EXISTS Track;
    DROP TABLE IF EXISTS Artist; 
    DROP TABLE IF EXISTS Album; 
    DROP TABLE IF EXISTS Genre;

    CREATE TABLE Artist (
    id  INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT UNIQUE,
    name    TEXT UNIQUE
);

CREATE TABLE Genre (
    id  INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT UNIQUE,
    name TEXT UNIQUE
);

CREATE TABLE Album (
    id  INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT UNIQUE,
    artist_id  INTEGER,
    title   TEXT UNIQUE
);

CREATE TABLE Track (
    id  INTEGER NOT NULL PRIMARY KEY 
        AUTOINCREMENT UNIQUE,
    title TEXT  UNIQUE,
    album_id INTEGER, genre_id INTEGER
);
''')

loop = input('Choose file :')
if len(loop) < 1 :
  loop = 'Library.xml'

def lookup (d, key):
  found = False
  for child in d:
    if found:
      return child.text
    if child.tag == 'key'and child.text == key :
      found = True
  return None

txt = ET.parse(loop)
all = txt.findall('dict/dict/dict')
print('dict count:', len(all))

for part in all:
  if (lookup(part,'Track ID') is None) :
    continue
  track = lookup(part, 'TRACK ID')
  name = lookup(part,'Name')
  artist = lookup(part, 'Artist')
  genre = lookup(part, 'Genre')
  album = lookup(part, 'Album')
 

  print(name,artist,genre,album)

  if name is None or artist is None or genre is None or album is None  :
    continue 
  cur.execute('''INSERT OR IGNORE INTO Artist (name) VALUES (?)''', (artist, )) 
  cur.execute('''SELECT id FROM Artist WHERE name = ? ''', (artist, ))
  artist_id = cur.fetchone()[0]

  cur.execute('''INSERT OR IGNORE INTO Album (title,artist_id) VALUES (?,?)''', (album, artist_id, ))
  cur.execute('''SELECT id FROM Album WHERE title = ? ''', (album, ))
  album_id = cur.fetchone()[0]

  cur.execute('''INSERT OR IGNORE INTO Genre (name) VALUES (?)''', (genre, ))
  cur.execute('''SELECT id FROM Genre WHERE name = ? ''', (genre,  ))
  genre_id = cur.fetchone()[0]

  cur.execute('''INSERT OR IGNORE INTO Track (id ,title,album_id,genre_id) VALUES (?,?,?,?)''', (track ,name,genre_id,album_id, ))

  conn.commit()
